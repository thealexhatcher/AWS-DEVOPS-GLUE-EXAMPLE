---
AWSTemplateFormatVersion: 2010-09-09
Description: >
  ETL Pipeline Stack
Parameters:
  VpcId:
    Type: AWS::EC2::VPC::Id
    Description: The ID of the Vpc 
  SubnetIds:
    Description: The subnets to place database instances in.
    Type: List<AWS::EC2::Subnet::Id>  
  CodeRepo:
    Type: String
 
Resources:            
  CodeBuildSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: !Sub ${AWS::StackName}-CodeBuildSecurityGroup
      VpcId: !Ref VpcId
      SecurityGroupEgress:
        CidrIp : 0.0.0.0/0
        IpProtocol: -1
        FromPort: -1
        ToPort: -1
        
  BuildProject:
    Type: AWS::CodeBuild::Project
    Properties:
      Artifacts:
        Type: CODEPIPELINE
      Source:
        Type: CODEPIPELINE
        BuildSpec: "cfn/pipe.buildspec_build.yml"
      Environment:
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/eb-python-2.7-amazonlinux-64:2.1.6
        Type: LINUX_CONTAINER
        EnvironmentVariables:
        - Name: PIPELINE_BUCKET
          Value: !ImportValue etl:resources:artifactbucket
        - Name: PIPELINE_DIR
          Value: !Sub "${AWS::StackName}"
      Name: !Sub '${AWS::StackName}-BuildProject'
      ServiceRole: !GetAtt BuildRole.Arn
      VpcConfig:
        VpcId: !Ref VpcId
        Subnets: !Ref SubnetIds 
        SecurityGroupIds: 
          - !Ref CodeBuildSecurityGroup

  TestProject:
    Type: AWS::CodeBuild::Project
    Properties:
      Source:
        Type: CODEPIPELINE
        BuildSpec: "cfn/pipe.buildspec_test.yml"
      Artifacts:
        Type: CODEPIPELINE
      Environment:
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/eb-python-2.7-amazonlinux-64:2.1.6
        Type: LINUX_CONTAINER
      Name: !Sub '${AWS::StackName}-TestProject'
      ServiceRole: !GetAtt BuildRole.Arn
      VpcConfig:
        VpcId: !Ref VpcId
        Subnets: !Ref SubnetIds 
        SecurityGroupIds: 
          - !Ref CodeBuildSecurityGroup
          
  Pipeline:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      Name: !Ref AWS::StackName
      ArtifactStore:
        Type: S3
        Location: !ImportValue etl:resources:artifactbucket
        #EncryptionKey:
        #  Id: !ImportValue repo:encryptionkey
        #  Type: "KMS"
      RestartExecutionOnUpdate: true
      RoleArn: !GetAtt PipelineRole.Arn
      Stages:
        - Name: Source
          Actions:
          - Name: CodeCommit
            ActionTypeId:
              Category: Source
              Provider: CodeCommit
              Owner: AWS
              Version: 1
            OutputArtifacts:
              - Name: source
            Configuration:
              RepositoryName: !Ref CodeRepo
              PollForSourceChanges: "true"
              BranchName: "master"
                
        - Name: Build
          Actions:
          - Name: "build-jobs"
            RunOrder: 1
            InputArtifacts:
            - Name: source 
            OutputArtifacts:
            - Name: buildartifacts
            ActionTypeId:
              Category: Build
              Provider: CodeBuild
              Owner: AWS
              Version: 1
            Configuration:
              ProjectName: !Ref BuildProject

        - Name: Test
          Actions:
          - Name: "create-data"
            RunOrder: 1
            InputArtifacts:
            - Name: source
            OutputArtifacts:
            - Name: testdataartifacts
            ActionTypeId:
              Category: Deploy
              Owner: AWS
              Provider: CloudFormation
              Version: 1
            Configuration:
              ActionMode: REPLACE_ON_FAILURE
              RoleArn: !GetAtt CFNRole.Arn
              StackName: !Sub '${AWS::StackName}-data-test'
              OutputFileName: outputs.json
              TemplatePath: source::cfn/data.yml
        
          - Name: "create-ddb-table"
            RunOrder: 1
            InputArtifacts:
            - Name: source
            OutputArtifacts:
            - Name: testddbtableartifacts
            ActionTypeId:
              Category: Deploy
              Owner: AWS
              Provider: CloudFormation
              Version: 1
            Configuration:
              ActionMode: REPLACE_ON_FAILURE
              Capabilities: CAPABILITY_IAM
              RoleArn: !GetAtt CFNRole.Arn
              StackName: !Sub '${AWS::StackName}-ddb-test'
              OutputFileName: outputs.json
              TemplatePath: source::cfn/ddb_table.yml 
            
          - Name: "create-glue"
            RunOrder: 2
            InputArtifacts:
            - Name: source
            - Name: buildartifacts
            - Name: testdataartifacts
            - Name: testddbtableartifacts
            OutputArtifacts:
            - Name: testglueartifacts
            ActionTypeId:
              Category: Deploy
              Owner: AWS
              Provider: CloudFormation
              Version: 1
            Configuration:
              ActionMode: REPLACE_ON_FAILURE
              Capabilities: CAPABILITY_IAM
              RoleArn: !GetAtt CFNRole.Arn
              StackName: !Sub '${AWS::StackName}-glue-test'
              OutputFileName: outputs.json
              TemplatePath: source::cfn/glue_datalake.yml
              TemplateConfiguration: buildartifacts::cfn/glue_datalake.config_test.json
              ParameterOverrides: |
                {
                  "ProcessedBucket": { "Fn::GetParam": ["testdataartifacts", "outputs.json", "Bucket"]},
                  "AccountTable": { "Fn::GetParam": ["testddbtableartifacts", "outputs.json", "TableName"]},
                  "ProcessQueueArn": { "Fn::GetParam": ["testdataartifacts", "outputs.json", "Queue"]}
                }
                
          - Name: "Runner"
            RunOrder: 3
            InputArtifacts:
              - Name: source
              - Name: testddbtableartifacts
              - Name: testdataartifacts
              - Name: testglueartifacts
            OutputArtifacts:
              - Name: testartifacts
            ActionTypeId:
              Category: Test
              Provider: CodeBuild
              Owner: AWS
              Version: 1
            Configuration:
              ProjectName: !Ref TestProject
              PrimarySource: source 

          - Name: "destroy-ddb"
            RunOrder: 6
            ActionTypeId:
              Category: Deploy
              Owner: AWS
              Provider: CloudFormation
              Version: '1'
            Configuration:
              ActionMode: DELETE_ONLY
              RoleArn: !GetAtt CFNRole.Arn
              StackName: !Sub '${AWS::StackName}-ddb-test' 
              
          - Name: "destroy-glue"
            RunOrder: 6
            ActionTypeId:
              Category: Deploy
              Owner: AWS
              Provider: CloudFormation
              Version: '1'
            Configuration:
              ActionMode: DELETE_ONLY
              RoleArn: !GetAtt CFNRole.Arn
              StackName: !Sub '${AWS::StackName}-glue-test'
          
        - Name: Staging-Approval
          Actions:
          - Name: "Approval"
            RunOrder: 1
            ActionTypeId:
              Category: Approval
              Owner: AWS
              Version: 1
              Provider: Manual
            
        - Name: Staging
          Actions:
          - Name: "create-data"
            RunOrder: 1
            InputArtifacts:
              - Name: source
            OutputArtifacts:
              - Name: stagingdataartifacts
            ActionTypeId:
              Category: Deploy
              Owner: AWS
              Provider: CloudFormation
              Version: 1
            Configuration:
              ActionMode: REPLACE_ON_FAILURE
              RoleArn: !GetAtt CFNRole.Arn
              StackName: !Sub '${AWS::StackName}-data-stage'
              OutputFileName: outputs.json
              TemplatePath: source::cfn/data.yml

          - Name: "create-glue"
            RunOrder: 2
            InputArtifacts:
              - Name: source
              - Name: buildartifacts
              - Name: stagingdataartifacts
            ActionTypeId:
              Category: Deploy
              Owner: AWS
              Provider: CloudFormation
              Version: 1
            Configuration:
              ActionMode: REPLACE_ON_FAILURE
              Capabilities: CAPABILITY_IAM
              RoleArn: !GetAtt CFNRole.Arn
              StackName: !Sub '${AWS::StackName}-glue-stage'
              TemplatePath: source::cfn/glue_datalake.yml
              TemplateConfiguration: buildartifacts::cfn/glue_datalake.config_stage.json
              ParameterOverrides: |
                {
                  "ProcessedBucket": { "Fn::GetParam": ["stagingdataartifacts", "outputs.json", "Bucket"]},
                  "ProcessQueueArn": { "Fn::GetParam": ["stagingdataartifacts", "outputs.json", "Queue"]}
                }
                
        - Name: Production-Approval
          Actions:
          - Name: "Approval"
            RunOrder: 1
            ActionTypeId:
              Category: Approval
              Owner: AWS
              Version: 1
              Provider: Manual
              
        - Name: Production
          Actions:
          - Name: "create-data"
            RunOrder: 2
            InputArtifacts:
              - Name: source
            OutputArtifacts:
              - Name: proddataartifacts
            ActionTypeId:
              Category: Deploy
              Owner: AWS
              Provider: CloudFormation
              Version: 1
            Configuration:
              ActionMode: REPLACE_ON_FAILURE
              RoleArn: !GetAtt CFNRole.Arn
              StackName: !Sub '${AWS::StackName}-data-prod'
              OutputFileName: outputs.json
              TemplatePath: source::cfn/data.yml

          - Name: "create-glue"
            RunOrder: 3
            InputArtifacts:
              - Name: source
              - Name: buildartifacts
              - Name: proddataartifacts
            ActionTypeId:
              Category: Deploy
              Owner: AWS
              Provider: CloudFormation
              Version: 1
            Configuration:
              ActionMode: REPLACE_ON_FAILURE
              Capabilities: CAPABILITY_IAM
              RoleArn: !GetAtt CFNRole.Arn
              StackName: !Sub '${AWS::StackName}-glue-prod'
              TemplatePath: source::cfn/glue_datalake.yml
              TemplateConfiguration: buildartifacts::cfn/glue_datalake.config_prod.json
              ParameterOverrides: |
                {
                  "ProcessedBucket": { "Fn::GetParam": ["proddataartifacts", "outputs.json", "Bucket"]},
                  "ProcessQueueArn": { "Fn::GetParam": ["proddataartifacts", "outputs.json", "Queue"]}
                }

  PipelineRole:
    Type: AWS::IAM::Role
    Properties:
      Path: "/"
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
        - Effect: Allow
          Action: sts:AssumeRole
          Principal:
            Service:
            - codepipeline.amazonaws.com
      Policies:
      - PolicyName: "base_policy" 
        PolicyDocument:
          Version: 2012-10-17
          Statement:
          - Resource: '*' 
            Effect: Allow
            Action:
            - s3:DeleteObject
            - s3:GetObject
            - s3:GetObjectVersion
            - s3:ListBucket
            - s3:PutObject
            - s3:GetBucketPolicy
          - Resource: '*' #Code Repo Read 
            Effect: Allow
            Action:
            - codecommit:ListBranches
            - codecommit:ListRepositories
            - codecommit:BatchGetRepositories
            - codecommit:Get*
            - codecommit:GitPull
            - codecommit:UploadArchive
            - codebuild:StartBuild
            - codebuild:BatchGetBuilds
            - cloudformation:CreateChangeSet
            - cloudformation:CreateStack
            - cloudformation:DeleteStack
            - cloudformation:Describe*
            - cloudformation:List*
            - cloudformation:UpdateStack
            - cloudformation:ValidateTemplate
            - cloudformation:ExecuteChangeSet
            - iam:PassRole

  BuildRole:
    Type: AWS::IAM::Role
    Properties:
      Path: "/"
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
        - Effect: Allow
          Action: sts:AssumeRole
          Principal:
            Service:
            - codebuild.amazonaws.com
      Policies:
      - PolicyName: "base_policy" 
        PolicyDocument:
          Version: 2012-10-17
          Statement:        
          - Resource: '*' #CodeBuild Project Actions
            Effect: Allow
            Action:
            - ec2:CreateNetworkInterfacePermission
            - ec2:CreateNetworkInterface
            - ec2:DescribeDhcpOptions
            - ec2:DescribeNetworkInterfaces
            - ec2:DeleteNetworkInterface
            - ec2:DescribeSubnets
            - ec2:DescribeSecurityGroups
            - ec2:DescribeVpcs
            - logs:CreateLogGroup
            - logs:CreateLogStream
            - logs:PutLogEvents
          - Resource: '*' #CodeBuild Artifact Read/Write Actions 
            Effect: Allow
            Action:
            - s3:DeleteObject
            - s3:GetObject
            - s3:GetObjectVersion
            - s3:ListBucket
            - s3:PutObject
            - s3:GetBucketPolicy
          - Resource: '*' #CodeBuild Build-Time Actions
            Effect: Allow
            Action:            
            - cloudformation:ValidateTemplate
            - cloudformation:Describe*
            - states:List*
            - states:Describe*
            - logs:Describe*
            - logs:Get*
            - tag:Get*

  CFNRole:
    Type: AWS::IAM::Role
    Properties:
      Path: "/"
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
        - Effect: Allow
          Action: sts:AssumeRole
          Principal:
            Service:
            - cloudformation.amazonaws.com
      Policies:
      - PolicyName: "base_policy" 
        PolicyDocument:
          Version: 2012-10-17
          Statement:
          - Resource: '*' # Athena Create/Delete/Read/Write, Glue Create/Delete/Read/Write
            Effect: Allow
            Action:
            - iam:*
            - glue:*
            - athena:*
            - s3:*
            - sqs:*
            - states:*
            - lambda:*
            - dynamodb:*
            - codebuild:*
            - codepipeline:*
            - logs:*
            - cloudwatch:*
            - ec2:CreateSecurityGroup
            - ec2:DeleteSecurityGroup
            - ec2:AuthorizeSecurityGroupEgress
            - ec2:AuthorizeSecurityGroupIngress
            - ec2:RevokeSecurityGroupEgress 
            - ec2:RevokeSecurityGroupIngress 
            - ec2:CreateNetworkInterfacePermission
            - ec2:CreateNetworkInterface
            - ec2:DeleteNetworkInterface
            - ec2:Describe*